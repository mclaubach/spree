exit
event
bids.first.event
bids
bid
bid.first.event
bids
bids.select{|bid| bid.event == event }.first
bid
next
bids
exit
bids
bid = bids.select{|bid| bid.event == event }.first
bid = @bids
event
@bids
team
selected?(team, @bids, event)
    bid && bid.choice == team
    bid = bids.select{|bid| bid.event == event }.first
def selected?(event, bids, team)
selected?(team, @bids, event)
selected
exit
bid.choice == team
team
Bid.find(1).choice
    bid = bids.select{|bid| bid.event == event }.first
bids = @bids
selected?(team, @bids, event)
exit
bids.count
bids
bid.choice_id
bid
bid.choice
bid = bids.select{|bid| bid.event == event }.first
bids = @bids
selected?(team, @bids, event)
exit
bid.save
next
exit
bid.save
Bid.first
bid.choice
bid
bid.save
next
bid_params
next
exit
bid_params
next
exit
bid.update(bid_params)
bid = Bid.where(event_id: params[:event_id], user: current_user).first_or_create
bid = _
Bid.where(event_id: params[:event_id], user: current_user).first_or_create
Bid.where(event_id: params[:event_id], user: current_user)
params[:event_id]
bid_params
current_user
params
